# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: WebSite and WebService

on:
  push:
    branches: [ "main", "master","test" ]
  pull_request:
    branches: [ "main","master", "test" ]

permissions:
  contents: read

defaults:
  run:
    working-directory: .

env:
  DOCKER_REGISTRY_URL: registry.profluens.com
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

jobs:
  build_docker:
    # Job name that shows in the GitHub UI
    name: Build Docker Images
    # Runner to use
    runs-on: ubuntu-latest
    #    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Update Version
        run : |
          sed -E  -i "s/^(version: [0-9]+\.[0-9]+\.).*$/\\1${{ github.run_number }}/" pubspec.yaml
        shell: bash
      - name: Update Version
        run : |
          sed -E  -i "s/^(version: [0-9]+\.[0-9]+\.).*$/\\1${{ github.run_number }}/" pubspec.yaml
        shell: bash
      - name: Set Firebase Settings
        run : |
          mv lib/firebase_options.template.dart  lib/firebase_options.dart
          sed -i -e "s/___FIREBASE_API_KEY_WEB___/${{ secrets.FIREBASE_API_KEY_WEB }}/g" lib/firebase_options.dart
          sed -i -e "s/___FIREBASE_APP_ID_WEB___/${{ secrets.FIREBASE_APP_ID_WEB }}/g" lib/firebase_options.dart
          sed -i -e "s/___FIREBASE_API_KEY_ANDROID___/${{ secrets.FIREBASE_API_KEY_ANDROID }}/g" lib/firebase_options.dart
          sed -i -e "s/___FIREBASE_APP_ID_ANDROID___/${{ secrets.FIREBASE_APP_ID_ANDROID }}/g" lib/firebase_options.dart
          sed -i -e "s/___FIREBASE_API_KEY_IOS___/${{ secrets.FIREBASE_API_KEY_IOS }}/g" lib/firebase_options.dart
          sed -i -e "s/___FIREBASE_APP_ID_IOS___/${{ secrets.FIREBASE_APP_ID_IOS }}/g" lib/firebase_options.dart
          sed -i -e "s/___FIREBASE_API_KEY_WINDOWS___/${{ secrets.FIREBASE_API_KEY_WINDOWS }}/g" lib/firebase_options.dart
          sed -i -e "s/___FIREBASE_APP_ID_WINDOWS___/${{ secrets.FIREBASE_APP_ID_WINDOWS }}/g" lib/firebase_options.dart
          sed -i -e "s/___FIREBASE_PROJECT_ID___/${{ secrets.FIREBASE_PROJECT_ID }}/g" lib/firebase_options.dart
          sed -i -e "s/___FIREBASE_MESSAGING_SENDER_ID___/${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}/g" lib/firebase_options.dart
        shell: bash

      # Build the Docker image
      - name: Build the Docker image
        run: docker compose  -f docker-compose.yml build

      - name: Create build directory
        run: mkdir -p build/web

      - name: Extract WEB from Docker image
        run: |
          docker create --name extractor_site registry.profluens.com/plop_site:latest
          docker cp extractor_site:/usr/share/nginx/html ./build/web
          docker rm extractor_site
          tar czf ./build/web/site.tar.gz ./build/web/html
          rm -rf ./build/web/html

      - name: Create build directory
        run: mkdir -p build/service

      - name: Extract Server from Docker image
        run: |
          docker create --name extractor_service registry.profluens.com/plop_service:latest
          docker cp extractor_service:/root/server_binary ./build/service/server_binary
          docker rm extractor_service
           

      - name: Login to registry
        run: echo $DOCKER_PASSWORD | docker login https://$DOCKER_REGISTRY_URL/v2/ -u $DOCKER_USERNAME --password-stdin
        continue-on-error: true

      - name: Login to registry
        run: echo $DOCKER_PASSWORD | docker login https://$DOCKER_REGISTRY_URL/v2/ -u $DOCKER_USERNAME --password-stdin
        continue-on-error: true

      - name: Login to registry
        run: echo $DOCKER_PASSWORD | docker login https://$DOCKER_REGISTRY_URL/v2/ -u $DOCKER_USERNAME --password-stdin
        continue-on-error: true

      # Push the images to the registry
      - name: Push the Docker image with version number
        run: docker compose  -f docker-compose.yml push
        continue-on-error: true

      - name: Push the Docker image with version number
        run: docker compose  -f docker-compose.yml push
        continue-on-error: true

      - name: Push the Docker image with version number
        run: docker compose -f docker-compose.yml push
        continue-on-error: true

      # Remove the local images
      - name: Remove the Docker image with version number
        run: docker compose -f docker-compose.yml down --rmi all


