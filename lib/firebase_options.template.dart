// File generated by FlutterFire CLI.
// ignore_for_file: type=lint
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        return macos;
      case TargetPlatform.windows:
        return windows;
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static const FirebaseOptions web = FirebaseOptions(
    apiKey: '___FIREBASE_API_KEY_WEB___',
    appId: '___FIREBASE_APP_ID_WEB___',
    messagingSenderId: '___FIREBASE_MESSAGING_SENDER_ID___',
    projectId: '___FIREBASE_PROJECT_ID___',
    authDomain: '___FIREBASE_PROJECT_ID___.firebaseapp.com',
    storageBucket: '___FIREBASE_PROJECT_ID___.firebasestorage.app',
  );

  static const FirebaseOptions android = FirebaseOptions(
    apiKey: '___FIREBASE_API_KEY_ANDROID___',
    appId: '___FIREBASE_APP_ID_ANDROID___',
    messagingSenderId: '___FIREBASE_MESSAGING_SENDER_ID___',
    projectId: '___FIREBASE_PROJECT_ID___',
    storageBucket: '___FIREBASE_PROJECT_ID___.firebasestorage.app',
  );

  static const FirebaseOptions ios = FirebaseOptions(
    apiKey: '___FIREBASE_API_KEY_IOS___',
    appId: '___FIREBASE_APP_ID_IOS___',
    messagingSenderId: '___FIREBASE_MESSAGING_SENDER_ID___',
    projectId: '___FIREBASE_PROJECT_ID___',
    storageBucket: '___FIREBASE_PROJECT_ID___.firebasestorage.app',
    iosBundleId: 'com.quickcontest.plop',
  );

  static const FirebaseOptions macos = FirebaseOptions(
    apiKey: '___FIREBASE_API_KEY_IOS___',
    appId: '___FIREBASE_APP_ID_IOS___',
    messagingSenderId: '___FIREBASE_MESSAGING_SENDER_ID___',
    projectId: '___FIREBASE_PROJECT_ID___',
    storageBucket: '___FIREBASE_PROJECT_ID___.firebasestorage.app',
    iosBundleId: 'com.quickcontest.plop',
  );

  static const FirebaseOptions windows = FirebaseOptions(
    apiKey: '___FIREBASE_API_KEY_WINDOWS___',
    appId: '___FIREBASE_APP_ID_WINDOWS___',
    messagingSenderId: '___FIREBASE_MESSAGING_SENDER_ID___',
    projectId: '___FIREBASE_PROJECT_ID___',
    authDomain: '___FIREBASE_PROJECT_ID___.firebaseapp.com',
    storageBucket: '___FIREBASE_PROJECT_ID___.firebasestorage.app',
  );
}
